apply plugin: 'java'
//apply plugin: 'application' //allows you to create run tasks

//dependencies management
repositories {
	mavenCentral()
}

dependencies
{
	compile 'commons-io:commons-io:2.4'
}

//Java source sets
sourceSets {
	main {
		java {
			srcDir 'src'
		}
		//no resources dir
	}
}


//tasks
//don't really need to explicitly define any tasks because the Java plugin will do everything automatically from sourceSets

defaultTasks 'build', 'assetProcessorRunnableJar'

//JAR creation
task assetProcessorRunnableJar(type: Jar, dependsOn: 'build') {
	manifest {
		attributes("Implementation-Title": "AssetProcessor",
		"Implementaton-Version": "1.0",
		"Main-Class": "com.jakway.assetprocessor.Main")
	}
	//package the JAR with all dependencies
	//baseName = getJarName(project) //because this is a subproject, just passing project will always get the correct name--no need to use project('AssetProcessor')
	baseName = project.ART_ASSET_JAR_NAME
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
    
	project.getRootProject().ext.set('assetProcessorRunnableJarPath', archivePath)
	assert project.getRootProject().assetProcessorRunnableJarPath == archivePath
}

/*
task runAssetProcessor(type: JavaExec, dependsOn: 'build') {
	main = 'com.jakway.assetprocessor.Main'
	args project.properties.assetProcessorSettings.getAssetIn(), project.properties.assetProcessorSettings.getAssetBin(), project.properties.assetProcessorSettings.getAssetOverwrite()
}*/